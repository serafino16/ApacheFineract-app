pipeline {
    agent any

    environment {
        
        AWS_REGION = 'eu-west-3'
        ECR_REPO_NAME = 'my_ecr'
        EKS_CLUSTER_NAME = 'eks-devstage'
        EKS_NAMESPACE = 'apache-fineract'
        IMAGE_TAG = "${GIT_COMMIT}"
        ECR_URL = "123456789012.dkr.ecr.${AWS_REGION}.amazonaws.com"
        CONTAINER_ENV = 'dev/stage'  
    }

    parameters {
        choice(name: 'CONTAINER_ENV', choices: ['dev/stage', 'prod'], description: 'Choose the container environment')
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    
                    if (params.CONTAINER_ENV == 'devstage') {
                        ECR_REPO_NAME = 'fineract-business-dev'  
                        AWS_REGION = 'us-west-3'
                    } else if (params.CONTAINER_ENV == 'prod') {
                        ECR_REPO_NAME = 'fineract-business-prod'  
                        AWS_REGION = 'eu-west-1'
                    }

                    ECR_URL = "123456789012.dkr.ecr.${AWS_REGION}.amazonaws.com"
                    sh "docker build -t ${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Docker Push to ECR') {
            steps {
                script {
                    
                    sh """
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_URL}
                        docker push ${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    
                    sh """
                        aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER_NAME}
                        kubectl set image deployment/spree-admin spree-admin=${ECR_URL}/${ECR_REPO_NAME}:${IMAGE_TAG} --namespace=${EKS_NAMESPACE}
                        kubectl rollout status deployment/spree-admin --namespace=${EKS_NAMESPACE}
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
